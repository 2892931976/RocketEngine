#!/usr/bin/env node
var debug = require('debug')('watcher');
var app = require('../app');

app.set('port', process.env.PORT || 3000);

/*var server = app.listen(app.get('port'), function() {
  debug('Express server listening on port ' + server.address().port);
});*/
var fs = require('fs');
var http = require('http');
var wsf = require('fslider_ws');
var WServer = wsf.Server;

var server = http.createServer(app);
var ws = new WServer(server);

ws.on('connected', function (socket) {
  socket.setTimeout(0);
  // recommend configure the fragmentSize, or it will go crazy!
  // configuration depends on OS userspace's buffer size
  // default to 2^10 (1KB), max is 2^32 (4GB)
  socket.fragmentSize = 0x200; // 0.5KB
  var watcher = null;
  socket.on('read', function (d) {    
    fs.stat(d, function (err, stat) {
      if (err)
        return socket.emit('err', err.code);
      watcher && fs.unwatchFile(d);
      if (stat.isDirectory()) {
        var dir = fs.readdirSync(d);
        watcher = fs.watchFile(d, function (e, f) {
          socket.send(fs.readdirSync(d));
        });
        socket.send(dir);
      } else if (stat.isFile()) {
        var file = fs.readFileSync(d);
        watcher = fs.watchFile(d, function (e, f) {
          socket.send(fs.readFileSync(d));
        });
        socket.send(file);
      }
    });
    
  });
});

wsf.listen(server);
server.listen(app.get('port'));
